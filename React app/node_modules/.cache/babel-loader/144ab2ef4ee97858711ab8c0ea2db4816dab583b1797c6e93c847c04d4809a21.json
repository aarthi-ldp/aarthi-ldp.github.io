{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aartm\\\\Desktop\\\\01-starting-setup\\\\src\\\\stories\\\\ExpenseItem.stories.tsx\",\n  _item1$parameters,\n  _item1$parameters2,\n  _item1$parameters2$do,\n  _item2$parameters,\n  _item2$parameters2,\n  _item2$parameters2$do,\n  _item3$parameters,\n  _item3$parameters2,\n  _item3$parameters2$do,\n  _item4$parameters,\n  _item4$parameters2,\n  _item4$parameters2$do;\nimport React from 'react';\nimport ExpenseItem from '../components/Expenses/ExpenseItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Components/ExpenseItem',\n  component: ExpenseItem\n};\nconst Template = args => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n  ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 71\n}, this);\n_c = Template;\nexport const item1 = Template.bind({});\nitem1.args = {\n  title: 'Stationaries',\n  amount: 1024.12,\n  date: new Date(2023, 7, 14)\n};\nexport const item2 = Template.bind({});\nitem2.args = {\n  title: 'Travel Expense',\n  amount: 25000,\n  date: new Date(2023, 2, 12)\n};\nexport const item3 = Template.bind({});\nitem3.args = {\n  title: 'Groceries',\n  amount: 11000,\n  date: new Date(2023, 2, 28)\n};\nexport const item4 = Template.bind({});\nitem4.args = {\n  title: 'Furniture',\n  amount: 5000,\n  date: new Date(2023, 5, 12)\n};\nitem1.parameters = {\n  ...item1.parameters,\n  docs: {\n    ...((_item1$parameters = item1.parameters) === null || _item1$parameters === void 0 ? void 0 : _item1$parameters.docs),\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...((_item1$parameters2 = item1.parameters) === null || _item1$parameters2 === void 0 ? void 0 : (_item1$parameters2$do = _item1$parameters2.docs) === null || _item1$parameters2$do === void 0 ? void 0 : _item1$parameters2$do.source)\n    }\n  }\n};\nitem2.parameters = {\n  ...item2.parameters,\n  docs: {\n    ...((_item2$parameters = item2.parameters) === null || _item2$parameters === void 0 ? void 0 : _item2$parameters.docs),\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...((_item2$parameters2 = item2.parameters) === null || _item2$parameters2 === void 0 ? void 0 : (_item2$parameters2$do = _item2$parameters2.docs) === null || _item2$parameters2$do === void 0 ? void 0 : _item2$parameters2$do.source)\n    }\n  }\n};\nitem3.parameters = {\n  ...item3.parameters,\n  docs: {\n    ...((_item3$parameters = item3.parameters) === null || _item3$parameters === void 0 ? void 0 : _item3$parameters.docs),\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...((_item3$parameters2 = item3.parameters) === null || _item3$parameters2 === void 0 ? void 0 : (_item3$parameters2$do = _item3$parameters2.docs) === null || _item3$parameters2$do === void 0 ? void 0 : _item3$parameters2$do.source)\n    }\n  }\n};\nitem4.parameters = {\n  ...item4.parameters,\n  docs: {\n    ...((_item4$parameters = item4.parameters) === null || _item4$parameters === void 0 ? void 0 : _item4$parameters.docs),\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...((_item4$parameters2 = item4.parameters) === null || _item4$parameters2 === void 0 ? void 0 : (_item4$parameters2$do = _item4$parameters2.docs) === null || _item4$parameters2$do === void 0 ? void 0 : _item4$parameters2$do.source)\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"item1\", \"item2\", \"item3\", \"item4\"];","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React from 'react';\nimport { Meta, Story } from '@storybook/react';\nimport ExpenseItem from '../components/Expenses/ExpenseItem';\nexport default ({\n  title: 'Components/ExpenseItem',\n  component: ExpenseItem\n} as Meta);\nconst Template: Story<ExpenseItemProps> = (args: ExpenseItemProps) => <ExpenseItem {...args} />;\nexport const item1: Story<ExpenseItemProps> = Template.bind({});\nitem1.args = {\n  title: 'Stationaries',\n  amount: 1024.12,\n  date: new Date(2023, 7, 14)\n};\nexport const item2: Story<ExpenseItemProps> = Template.bind({});\nitem2.args = {\n  title: 'Travel Expense',\n  amount: 25000,\n  date: new Date(2023, 2, 12)\n};\nexport const item3: Story<ExpenseItemProps> = Template.bind({});\nitem3.args = {\n  title: 'Groceries',\n  amount: 11000,\n  date: new Date(2023, 2, 28)\n};\nexport const item4: Story<ExpenseItemProps> = Template.bind({});\nitem4.args = {\n  title: 'Furniture',\n  amount: 5000,\n  date: new Date(2023, 5, 12)\n};\nitem1.parameters = {\n  ...item1.parameters,\n  docs: {\n    ...item1.parameters?.docs,\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...item1.parameters?.docs?.source\n    }\n  }\n};\nitem2.parameters = {\n  ...item2.parameters,\n  docs: {\n    ...item2.parameters?.docs,\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...item2.parameters?.docs?.source\n    }\n  }\n};\nitem3.parameters = {\n  ...item3.parameters,\n  docs: {\n    ...item3.parameters?.docs,\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...item3.parameters?.docs?.source\n    }\n  }\n};\nitem4.parameters = {\n  ...item4.parameters,\n  docs: {\n    ...item4.parameters?.docs,\n    source: {\n      originalSource: \"(args: ExpenseItemProps) => <ExpenseItem {...args} />\",\n      ...item4.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}